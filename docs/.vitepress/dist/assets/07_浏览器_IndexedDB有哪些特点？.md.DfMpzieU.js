import{_ as a,c as d,o as t,ae as r}from"./chunks/framework.Cthp9TdA.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"07_浏览器/IndexedDB有哪些特点？.md","filePath":"07_浏览器/IndexedDB有哪些特点？.md"}'),o={name:"07_浏览器/IndexedDB有哪些特点？.md"};function n(i,e,l,h,_,c){return t(),d("div",null,e[0]||(e[0]=[r('<blockquote><p>IndexedDB 是浏览器提供的一种强大的 NoSQL 数据库，它允许你在客户端存储大量的结构化数据。与 localStorage 相比，IndexedDB 提供了更大的存储空间、更强大的查询功能和事务支持。以下是 IndexedDB 的一些主要特点：</p></blockquote><h4 id="_1-键值对存储-支持多种数据类型" tabindex="-1">1. 键值对存储，支持多种数据类型： <a class="header-anchor" href="#_1-键值对存储-支持多种数据类型" aria-label="Permalink to &quot;1. 键值对存储，支持多种数据类型：&quot;">​</a></h4><p>IndexedDB 以键值对的形式存储数据，其中键可以是任何 JavaScript 类型（包括二进制数据），值也可以是任何 JavaScript 对象。这使得 IndexedDB 可以灵活地存储各种类型的数据，例如文本、JSON 对象、数组、甚至文件。</p><h4 id="_2-对象存储" tabindex="-1">2. 对象存储： <a class="header-anchor" href="#_2-对象存储" aria-label="Permalink to &quot;2. 对象存储：&quot;">​</a></h4><p>IndexedDB 将数据存储在对象存储（Object Store）中，类似于关系数据库中的表。每个对象存储都包含一组数据记录，每条记录都有一个唯一的键。你可以在一个数据库中创建多个对象存储，以组织不同类型的数据。</p><h4 id="_3-索引支持" tabindex="-1">3. 索引支持： <a class="header-anchor" href="#_3-索引支持" aria-label="Permalink to &quot;3. 索引支持：&quot;">​</a></h4><p>IndexedDB 支持为对象存储中的数据创建索引。索引可以加速数据的检索，尤其是在处理大量数据时。你可以根据一个或多个属性创建索引，并使用这些索引进行高效的查询。</p><h4 id="_4-事务支持" tabindex="-1">4. 事务支持： <a class="header-anchor" href="#_4-事务支持" aria-label="Permalink to &quot;4. 事务支持：&quot;">​</a></h4><p>IndexedDB 的所有操作都在事务中进行。事务保证了一组操作的原子性，即要么全部成功执行，要么全部不执行。这有助于维护数据的完整性，并防止数据损坏。</p><h4 id="_5-异步-api" tabindex="-1">5. 异步 API： <a class="header-anchor" href="#_5-异步-api" aria-label="Permalink to &quot;5. 异步 API：&quot;">​</a></h4><p>IndexedDB 使用异步 API 进行操作。这意味着操作不会阻塞主线程，从而提高了应用程序的响应速度。所有 IndexedDB 操作都通过事件和回调函数进行处理。</p><h4 id="_6-版本控制" tabindex="-1">6. 版本控制： <a class="header-anchor" href="#_6-版本控制" aria-label="Permalink to &quot;6. 版本控制：&quot;">​</a></h4><p>IndexedDB 支持数据库的版本控制。当需要修改数据库结构时（例如添加新的对象存储或索引），可以升级数据库的版本。版本控制机制允许应用程序平滑地迁移数据，并保持数据的兼容性。</p><h4 id="_7-存储空间大" tabindex="-1">7. 存储空间大： <a class="header-anchor" href="#_7-存储空间大" aria-label="Permalink to &quot;7. 存储空间大：&quot;">​</a></h4><p>与 localStorage 相比，IndexedDB 提供了更大的存储空间。具体的大小限制取决于浏览器和用户的磁盘空间。通常情况下，IndexedDB 可以存储几百兆甚至几个 G 的数据。</p><h4 id="_8-支持游标" tabindex="-1">8. 支持游标： <a class="header-anchor" href="#_8-支持游标" aria-label="Permalink to &quot;8. 支持游标：&quot;">​</a></h4><p>IndexedDB 提供了游标（Cursor）机制，用于遍历对象存储中的数据。游标可以高效地访问大量数据，而无需一次性加载所有数据到内存中</p><h4 id="总结" tabindex="-1">总结： <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结：&quot;">​</a></h4><p>IndexedDB 是一种功能强大的客户端数据库，适用于存储大量的结构化数据。它提供了丰富的特性，例如索引、事务、版本控制和游标，可以满足各种复杂的存储需求。如果你需要在客户端存储大量数据，并需要进行复杂的查询和操作，那么 IndexedDB 是一个不错的选择。</p>',19)]))}const x=a(o,[["render",n]]);export{p as __pageData,x as default};
