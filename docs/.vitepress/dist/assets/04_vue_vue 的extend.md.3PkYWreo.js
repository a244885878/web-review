import{_ as i,c as a,o as n,ae as e}from"./chunks/framework.Cthp9TdA.js";const r=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"04_vue/vue 的extend.md","filePath":"04_vue/vue 的extend.md"}'),t={name:"04_vue/vue 的extend.md"};function l(p,s,h,k,d,E){return n(),a("div",null,s[0]||(s[0]=[e(`<h4 id="什么是-vue-extend" tabindex="-1">什么是 Vue.extend？ <a class="header-anchor" href="#什么是-vue-extend" aria-label="Permalink to &quot;什么是 Vue.extend？&quot;">​</a></h4><p><code>Vue.extend</code> 是 Vue.js 中一个非常重要的全局方法，它用于创建一个“子类”。更直白地说，就是通过它，我们可以基于 Vue 的基础构造器，创建一个自定义的组件构造器。这个构造器预设了部分选项，如 <code>data</code>、<code>methods</code>、<code>computed</code> 等，方便我们快速构建组件。</p><h5 id="vue-extend-的作用" tabindex="-1">Vue.extend 的作用 <a class="header-anchor" href="#vue-extend-的作用" aria-label="Permalink to &quot;Vue.extend 的作用&quot;">​</a></h5><ul><li>组件创建： <code>Vue.extend</code> 是创建组件的基石。通过它，我们可以定义组件的结构、数据、行为等。</li><li>组件继承： 虽然 <code>Vue.extend</code> 主要用于创建组件，但它也支持组件之间的继承。通过将一个组件作为另一个组件的 <code>extends</code> 选项的值，可以实现组件的复用和扩展。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个名为 MyComponent 的组件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MyComponent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">extend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  template: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &lt;div&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;p&gt;{{ message }}&lt;/p&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &lt;button @click=&quot;increment&quot;&gt;Increment&lt;/button&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, Vue!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  methods: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    increment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在 Vue 实例中注册组件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  el: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  components: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    MyComponent,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h5 id="vue-extend-和-vue-component-的区别" tabindex="-1">Vue.extend 和 Vue.component 的区别 <a class="header-anchor" href="#vue-extend-和-vue-component-的区别" aria-label="Permalink to &quot;Vue.extend 和 Vue.component 的区别&quot;">​</a></h5><ul><li>Vue.component：用于全局或局部注册组件，通常直接传入组件选项。</li><li>Vue.extend：用于创建组件构造器，更灵活，常用于创建可复用的组件基类或动态创建组件。</li></ul><h5 id="vue-extend-的优势" tabindex="-1">Vue.extend 的优势 <a class="header-anchor" href="#vue-extend-的优势" aria-label="Permalink to &quot;Vue.extend 的优势&quot;">​</a></h5><ul><li>灵活： 可以自定义组件的各个方面，如模板、数据、方法等。</li><li>可复用： 创建的组件构造器可以被多次使用，提高开发效率。</li><li>可扩展： 支持组件继承，方便构建复杂的组件体系。</li></ul><h4 id="vue-3-中的变化" tabindex="-1">Vue 3 中的变化 <a class="header-anchor" href="#vue-3-中的变化" aria-label="Permalink to &quot;Vue 3 中的变化&quot;">​</a></h4><p>在 Vue 3 中，推荐使用 <code>defineComponent</code> 函数来定义组件，它提供了更简洁和类型安全的语法。<code>Vue.extend</code> 虽然仍然可以使用，但不再是首选。</p>`,11)]))}const c=i(t,[["render",l]]);export{r as __pageData,c as default};
