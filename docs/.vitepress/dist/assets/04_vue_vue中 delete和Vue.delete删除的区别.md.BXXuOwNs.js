import{_ as i,c as a,o as e,ae as t}from"./chunks/framework.Cthp9TdA.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"04_vue/vue中 delete和Vue.delete删除的区别.md","filePath":"04_vue/vue中 delete和Vue.delete删除的区别.md"}'),l={name:"04_vue/vue中 delete和Vue.delete删除的区别.md"};function n(h,s,p,k,d,r){return e(),a("div",null,s[0]||(s[0]=[t(`<blockquote><p>在 Vue 中，<code>delete</code> 和 <code>Vue.delete</code> 都可以用来删除数组中的元素，但它们之间存在重要的区别，尤其是在 Vue 的响应式系统方面。</p></blockquote><h4 id="_1-delete-javascript-原生操作符" tabindex="-1">1. delete (JavaScript 原生操作符) <a class="header-anchor" href="#_1-delete-javascript-原生操作符" aria-label="Permalink to &quot;1. delete (JavaScript 原生操作符)&quot;">​</a></h4><ul><li>作用对象： <code>delete</code> 是 JavaScript 的原生操作符，用于删除对象的属性。它也可以用于删除数组中的元素，但本质上是将数组视为对象，删除的是数组的“属性”（即索引）。</li><li>数组长度变化： 使用 <code>delete</code> 删除数组的元素时，元素会被删除，但数组的长度不会改变。被删除的元素位置会变成 <code>empty/undefined</code>，形成一个“空洞”。</li><li>响应系统： <code>delete</code> 操作不会触发 Vue 的响应式系统。这意味着，即使你使用 <code>delete</code> 修改了数组，Vue 也不会检测到这个变化，从而不会更新视图。</li></ul><h5 id="示例" tabindex="-1">示例： <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例：&quot;">​</a></h5><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  data: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    myArray: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;b&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vm.myArray[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 删除索引为 1 的元素</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vm.myArray); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出: [&#39;a&#39;, empty, &#39;c&#39;]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vm.myArray.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出: 3</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 视图不会更新</span></span></code></pre></div><h4 id="_2-vue-delete-object-index-key-vue-提供的-api" tabindex="-1">2. Vue.delete(Object, index/key) (Vue 提供的 API) <a class="header-anchor" href="#_2-vue-delete-object-index-key-vue-提供的-api" aria-label="Permalink to &quot;2. Vue.delete(Object, index/key) (Vue 提供的 API)&quot;">​</a></h4><ul><li>作用对象： <code>Vue.delete</code> 是 Vue 提供的专门用于操作数组和对象的 API。</li><li>数组长度变化： 使用 <code>Vue.delete</code> 删除数组的元素时，元素会被真正地删除，数组的长度会相应地减小。数组的索引也会重新排列。</li><li>响应系统： <code>Vue.delete</code> 操作会触发 Vue 的响应式系统。Vue 会检测到数组的变化，并更新相关的视图。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> vm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  data: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    myArray: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;b&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vm.myArray, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 删除索引为 1 的元素</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vm.myArray); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出: [&#39;a&#39;, &#39;c&#39;]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vm.myArray.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出: 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 视图会更新</span></span></code></pre></div><h4 id="总结" tabindex="-1">总结： <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结：&quot;">​</a></h4><table tabindex="0"><thead><tr><th>特性</th><th><code>delete</code></th><th><code>Vue.delete</code></th></tr></thead><tbody><tr><td>作用对象</td><td>JavaScript 对象属性（也可用于数组）</td><td>Vue 数组和对象</td></tr><tr><td>数组长度变化</td><td>不变，形成空洞 <code>(empty/undefined)</code></td><td>改变，数组长度减小</td></tr><tr><td>响应系统</td><td>不触发</td><td>触发</td></tr></tbody></table><p>在 Vue 中，如果需要删除数组中的元素并确保视图能够正确更新，应该使用 <code>Vue.delete</code>。只有 <code>Vue.delete</code> 才能触发 Vue 的响应式系统，从而保证数据和视图的一致性。<code>delete</code> 操作虽然可以删除数组元素，但由于不会触发响应式系统，因此在 Vue 中不推荐使用，尤其是在需要更新视图的场景下。</p>`,11)]))}const c=i(l,[["render",n]]);export{o as __pageData,c as default};
