import{_ as d,c as e,o as r,ae as o}from"./chunks/framework.Cthp9TdA.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"04_vue/Vue 的父组件和子组件生命周期钩子函数执行顺序.md","filePath":"04_vue/Vue 的父组件和子组件生命周期钩子函数执行顺序.md"}'),a={name:"04_vue/Vue 的父组件和子组件生命周期钩子函数执行顺序.md"};function l(i,t,n,s,c,_){return r(),e("div",null,t[0]||(t[0]=[o('<blockquote><p>Vue 中，父子组件的生命周期钩子函数执行顺序是一个非常重要的概念，它直接影响着组件间的通信和数据传递。</p></blockquote><h4 id="整体执行顺序" tabindex="-1">整体执行顺序 <a class="header-anchor" href="#整体执行顺序" aria-label="Permalink to &quot;整体执行顺序&quot;">​</a></h4><p>一般来说，Vue 父子组件的生命周期钩子函数的执行顺序如下：</p><ul><li><strong>加载渲染过程</strong>： 父组件先创建，才能有子组件；子组件创建完成，父组件才算完整。</li><li><strong>更新过程</strong>： 父组件更新会触发子组件更新，子组件更新完成后，父组件更新才算结束。</li><li><strong>销毁过程</strong>： 父组件先开始销毁，子组件销毁后，父组件完全销毁。</li></ul><h4 id="详细执行顺序" tabindex="-1">详细执行顺序 <a class="header-anchor" href="#详细执行顺序" aria-label="Permalink to &quot;详细执行顺序&quot;">​</a></h4><table tabindex="0"><thead><tr><th>阶段</th><th>父组件</th><th>子组件</th></tr></thead><tbody><tr><td>创建</td><td>beforeCreate</td><td></td></tr><tr><td></td><td>created</td><td></td></tr><tr><td></td><td>beforeMount</td><td></td></tr><tr><td></td><td></td><td>beforeCreate</td></tr><tr><td></td><td></td><td>created</td></tr><tr><td></td><td></td><td>beforeMount</td></tr><tr><td></td><td></td><td>mounted</td></tr><tr><td></td><td>mounted</td><td></td></tr><tr><td>更新</td><td>beforeUpdate</td><td></td></tr><tr><td></td><td></td><td>beforeUpdate</td></tr><tr><td></td><td></td><td>updated</td></tr><tr><td></td><td>updated</td><td></td></tr><tr><td>销毁</td><td>beforeDestroy</td><td></td></tr><tr><td></td><td></td><td>beforeDestroy</td></tr><tr><td></td><td></td><td>destroyed</td></tr><tr><td></td><td>destroyed</td><td></td></tr></tbody></table><h4 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h4><ul><li><strong>异步操作</strong>： 如果在生命周期钩子函数中进行异步操作，可能会影响执行顺序。</li><li><strong>条件渲染</strong>： 如果子组件使用 <code>v-if</code> 或 <code>v-show</code> 进行条件渲染，其生命周期钩子函数的执行时机也会受到影响。</li><li><strong>组件通信</strong>： 父子组件之间的通信可以通过 <code>props</code>、<code>events</code>、<code>$refs</code> 等方式实现。</li></ul><h4 id="实践建议" tabindex="-1">实践建议 <a class="header-anchor" href="#实践建议" aria-label="Permalink to &quot;实践建议&quot;">​</a></h4><ul><li>数据初始化： 在 <code>created</code> 钩子中初始化数据。</li><li>DOM 操作： 在 <code>mounted</code> 钩子中操作 DOM。</li><li>异步请求： 在 <code>created</code> 钩子中发起异步请求。</li><li>销毁定时器： 在 <code>beforeDestroy</code> 钩子中销毁定时器。</li></ul>',10)]))}const b=d(a,[["render",l]]);export{h as __pageData,b as default};
