import{_ as a,c as s,o,ae as n}from"./chunks/framework.Cthp9TdA.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"06_http/HTTP请求报文的是什么样的？.md","filePath":"06_http/HTTP请求报文的是什么样的？.md"}'),i={name:"06_http/HTTP请求报文的是什么样的？.md"};function t(l,e,c,d,p,r){return o(),s("div",null,e[0]||(e[0]=[n(`<blockquote><p>HTTP 请求报文是客户端（例如浏览器）发送给服务器的请求信息。它以文本形式发送，由多行数据构成。HTTP 请求报文的结构主要包括以下几个部分：</p></blockquote><h4 id="_1-请求行-request-line" tabindex="-1">1. 请求行（Request Line） <a class="header-anchor" href="#_1-请求行-request-line" aria-label="Permalink to &quot;1. 请求行（Request Line）&quot;">​</a></h4><p>请求行是报文的第一行，包含三个部分，以空格分隔：</p><ul><li>请求方法（Method）：指定客户端希望服务器执行的动作。常见的请求方法有： <ul><li><code>GET</code>：请求获取指定资源。</li><li><code>POST</code>：向服务器提交数据，通常用于提交表单或上传文件。</li><li><code>PUT</code>：上传资源，通常用于更新或创建资源。</li><li><code>DELETE</code>：请求服务器删除指定资源。</li><li><code>HEAD</code>：类似于 <code>GET</code>，但只请求响应头，不包含响应体。</li><li><code>OPTIONS</code>：请求服务器支持的通信选项。</li><li><code>CONNECT</code>：建立到由目标资源标识的服务器的隧道。</li><li><code>TRACE</code>：沿着到目标资源的路径执行消息环回测试。</li></ul></li><li>请求 URI（Request URI）：指定请求的资源地址。</li><li>HTTP 协议版本（HTTP Version）：指定使用的 HTTP 协议版本，例如 <code>HTTP/1.1</code> 或 <code>HTTP/2</code>。</li></ul><h4 id="_2-请求头部-request-headers" tabindex="-1">2. 请求头部（Request Headers） <a class="header-anchor" href="#_2-请求头部-request-headers" aria-label="Permalink to &quot;2. 请求头部（Request Headers）&quot;">​</a></h4><p>请求头部提供关于请求的附加信息，以键值对的形式存在，每行一个头部字段，格式为 <code>Header-Name: Header-Value</code>。常见的请求头部字段有：</p><ul><li><code>Host</code>：指定服务器的主机名和端口号。</li><li><code>User-Agent</code>：客户端的浏览器信息。</li><li><code>Accept</code>：客户端可以接收的响应内容类型。</li><li><code>Accept-Language</code>：客户端可以接收的语言。</li><li><code>Accept-Encoding</code>：客户端可以接收的编码方式。</li><li><code>Connection</code>：连接方式，例如 <code>keep-alive</code> 表示保持连接。</li><li><code>Cookie</code>：客户端存储的 Cookie 信息。</li><li><code>Content-Type</code>：请求体的 MIME 类型，用于 <code>POST</code> 或 <code>PUT</code> 请求。</li><li><code>Content-Length</code>：请求体的长度。</li><li><code>Referer</code>：表示请求的来源页面。</li></ul><h5 id="例如" tabindex="-1">例如： <a class="header-anchor" href="#例如" aria-label="Permalink to &quot;例如：&quot;">​</a></h5><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Host: www.example.com</span></span>
<span class="line"><span>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) ...</span></span>
<span class="line"><span>Accept: text/html,application/xhtml+xml,...</span></span></code></pre></div><h4 id="_3-空行-empty-line" tabindex="-1">3. 空行（Empty Line） <a class="header-anchor" href="#_3-空行-empty-line" aria-label="Permalink to &quot;3. 空行（Empty Line）&quot;">​</a></h4><p>请求头部之后是一个空行，用于分隔头部和请求体。</p><h4 id="_4-请求体-request-body" tabindex="-1">4. 请求体（Request Body） <a class="header-anchor" href="#_4-请求体-request-body" aria-label="Permalink to &quot;4. 请求体（Request Body）&quot;">​</a></h4><p>请求体包含要发送给服务器的数据，例如表单数据或上传的文件内容。只有 <code>POST</code>、<code>PUT</code> 等请求方法才包含请求体。</p><p>例如，一个 <code>POST</code> 请求的请求体可能包含以下表单数据：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>name=John&amp;age=30</span></span></code></pre></div><h4 id="一个完整的-http-请求报文示例" tabindex="-1">一个完整的 HTTP 请求报文示例： <a class="header-anchor" href="#一个完整的-http-请求报文示例" aria-label="Permalink to &quot;一个完整的 HTTP 请求报文示例：&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>POST /submit HTTP/1.1</span></span>
<span class="line"><span>Host: www.example.com</span></span>
<span class="line"><span>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) ...</span></span>
<span class="line"><span>Content-Type: application/x-www-form-urlencoded</span></span>
<span class="line"><span>Content-Length: 18</span></span>
<span class="line"><span></span></span>
<span class="line"><span>name=John&amp;age=30</span></span></code></pre></div><h4 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h4><p>HTTP 请求报文是客户端与服务器通信的基础，理解其结构对于进行 Web 开发和调试非常重要。通过分析请求报文，可以了解客户端的请求意图和发送的数据，从而更好地进行服务器端处理。</p>`,19)]))}const T=a(i,[["render",t]]);export{u as __pageData,T as default};
