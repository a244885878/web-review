import{_ as l,c as a,o as e,ae as t}from"./chunks/framework.Cthp9TdA.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"02_css/盒子模型.md","filePath":"02_css/盒子模型.md"}'),r={name:"02_css/盒子模型.md"};function n(o,i,d,s,c,h){return e(),a("div",null,i[0]||(i[0]=[t('<h3 id="什么是-css-盒模型" tabindex="-1">什么是 CSS 盒模型？ <a class="header-anchor" href="#什么是-css-盒模型" aria-label="Permalink to &quot;什么是 CSS 盒模型？&quot;">​</a></h3><blockquote><p>CSS 盒模型是用来描述 HTML 元素在页面上占据空间的一种概念。它将 HTML 元素视为一个矩形的盒子，这个盒子由内容（content）、内边距（padding）、边框（border）和外边距（margin）四部分组成。</p></blockquote><p>盒模型的组成部分</p><ul><li>内容区（content）：显示元素内容的区域。</li><li>内边距（padding）：内容区与边框之间的空白区域。</li><li>边框（border）：围绕在内容区和内边距周围的一条线。</li><li>外边距（margin）：边框与其他元素之间的空白区域。</li></ul><h4 id="标准盒模型和-ie-盒模型" tabindex="-1">标准盒模型和 IE 盒模型 <a class="header-anchor" href="#标准盒模型和-ie-盒模型" aria-label="Permalink to &quot;标准盒模型和 IE 盒模型&quot;">​</a></h4><ul><li>标准盒模型（W3C 盒模型）： <ul><li>width 和 height 属性只作用于 content 部分。</li><li>盒子的总宽度 = content + padding + border + margin。</li><li>这是 W3C 推荐的标准盒模型。</li></ul></li><li>IE 盒模型： <ul><li>width 和 height 属性作用于 content + padding + border。</li><li>盒子的总宽度 = width + margin。</li><li>这是 IE 浏览器早期版本使用的盒模型。</li></ul></li></ul><h4 id="box-sizing-属性" tabindex="-1">box-sizing 属性 <a class="header-anchor" href="#box-sizing-属性" aria-label="Permalink to &quot;box-sizing 属性&quot;">​</a></h4><ul><li>作用：用来设置元素的盒模型是标准盒模型还是 IE 盒模型。</li><li>值： <ul><li>content-box：标准盒模型（默认值）。</li><li>border-box：IE 盒模型。</li></ul></li></ul><h4 id="盒模型的应用场景" tabindex="-1">盒模型的应用场景 <a class="header-anchor" href="#盒模型的应用场景" aria-label="Permalink to &quot;盒模型的应用场景&quot;">​</a></h4><ul><li>设置元素的宽度和高度：通过设置 content、padding、border 和 margin 来控制元素的尺寸。</li><li>创建间距：使用 padding 和 margin 来在元素之间创建空白区域。</li><li>设置边框：使用 border 属性来给元素添加边框。</li><li>实现响应式布局：通过媒体查询和盒模型来实现不同屏幕尺寸下的布局。</li></ul>',10)]))}const b=l(r,[["render",n]]);export{_ as __pageData,b as default};
