import{_ as s,c as i,o as t,ae as e}from"./chunks/framework.Cthp9TdA.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"03_js/typeof NaN 的结果是什么？.md","filePath":"03_js/typeof NaN 的结果是什么？.md"}'),n={name:"03_js/typeof NaN 的结果是什么？.md"};function l(h,a,p,r,k,o){return t(),i("div",null,a[0]||(a[0]=[e(`<h3 id="typeof-nan-的结果是什么" tabindex="-1">typeof NaN 的结果是什么？ <a class="header-anchor" href="#typeof-nan-的结果是什么" aria-label="Permalink to &quot;typeof NaN 的结果是什么？&quot;">​</a></h3><p>typeof NaN 的结果是 &quot;number&quot;。</p><p><strong>为什么是 number 类型？</strong></p><ul><li>NaN 的含义: NaN 是 &quot;Not a Number&quot; 的缩写，即“不是一个数字”。它通常出现在数学运算无法得到有效数值结果时，比如 0 除以 0、对负数开平方根等。</li><li>类型判断: 虽然 NaN 表示“不是一个数字”，但 JavaScript 将其归类为 number 类型。这是因为 NaN 是一个特殊的数值，用于表示计算错误或无效的数值结果。</li></ul><h4 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h4><ul><li>typeof NaN === &quot;number&quot;</li><li>NaN 是一个特殊的数值，用于表示计算错误。</li><li>虽然表示“不是一个数字”，但类型上属于 number。</li></ul><h4 id="常见出现-nan-的场景" tabindex="-1">常见出现 NaN 的场景： <a class="header-anchor" href="#常见出现-nan-的场景" aria-label="Permalink to &quot;常见出现 NaN 的场景：&quot;">​</a></h4><ul><li>数学运算错误: 0 除以 0、对负数开平方根等。</li><li>类型转换失败: 将无法转换为数字的字符串转换为数字时。</li><li>其他函数返回 NaN: 一些数学函数在特定输入下会返回 NaN，比如 Math.sqrt(-1)。</li></ul><h4 id="如何判断一个值是否为-nan" tabindex="-1">如何判断一个值是否为 NaN？ <a class="header-anchor" href="#如何判断一个值是否为-nan" aria-label="Permalink to &quot;如何判断一个值是否为 NaN？&quot;">​</a></h4><p><strong>isNaN() 函数:</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true (字符串无法转换为数字)</span></span></code></pre></div><p><strong>Number.isNaN() 函数: ES6 引入了 Number.isNaN() 函数，它比 isNaN() 函数更精确，因为它只对 Number 类型的值返回 true。</strong></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Number.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Number.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span></code></pre></div><h4 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h4><ul><li>NaN 与任何值都不相等，包括它自己： NaN !== NaN 为 true。</li><li>NaN 的出现通常表示程序中存在错误，需要仔细检查代码。</li></ul>`,15)]))}const u=s(n,[["render",l]]);export{d as __pageData,u as default};
