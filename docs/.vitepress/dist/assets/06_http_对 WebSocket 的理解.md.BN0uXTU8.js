import{_ as e,c as a,o,ae as d}from"./chunks/framework.Cthp9TdA.js";const n=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"06_http/对 WebSocket 的理解.md","filePath":"06_http/对 WebSocket 的理解.md"}'),l={name:"06_http/对 WebSocket 的理解.md"};function r(i,t,c,b,h,s){return o(),a("div",null,t[0]||(t[0]=[d('<p>WebSocket 是一种在单个 TCP 连接上进行全双工通信的协议。它使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据，而不需要客户端不断地轮询。</p><h4 id="websocket-的特点" tabindex="-1">WebSocket 的特点 <a class="header-anchor" href="#websocket-的特点" aria-label="Permalink to &quot;WebSocket 的特点&quot;">​</a></h4><ul><li>全双工通信： 客户端和服务器可以同时发送和接收数据，实现真正的实时通信。</li><li>基于 TCP 协议： 提供可靠的数据传输。</li><li>持久连接： 一旦建立连接，客户端和服务器可以保持连接，避免了频繁地建立和断开连接的开销。</li><li>支持二进制数据传输： 可以传输文本和二进制数据，提高了传输效率。</li></ul><h4 id="websocket-的应用场景" tabindex="-1">WebSocket 的应用场景 <a class="header-anchor" href="#websocket-的应用场景" aria-label="Permalink to &quot;WebSocket 的应用场景&quot;">​</a></h4><ul><li>实时通信应用： 如聊天室、在线游戏、实时数据更新等。</li><li>推送服务： 如实时通知、消息推送等。</li></ul><h4 id="websocket-与-http-的区别" tabindex="-1">WebSocket 与 HTTP 的区别 <a class="header-anchor" href="#websocket-与-http-的区别" aria-label="Permalink to &quot;WebSocket 与 HTTP 的区别&quot;">​</a></h4><table tabindex="0"><thead><tr><th>特性</th><th>WebSocket</th><th>HTTP</th></tr></thead><tbody><tr><td>连接方式</td><td>持久连接</td><td>短连接</td></tr><tr><td>通信方式</td><td>全双工</td><td>半双工</td></tr><tr><td>数据传输</td><td>双向</td><td>单向</td></tr><tr><td>应用场景</td><td>实时通信</td><td>网页浏览</td></tr></tbody></table><h4 id="websocket-的使用" tabindex="-1">WebSocket 的使用 <a class="header-anchor" href="#websocket-的使用" aria-label="Permalink to &quot;WebSocket 的使用&quot;">​</a></h4><ol><li>建立连接： 客户端通过 JavaScript 的 WebSocket API 发起连接请求，服务器端接收请求并建立连接。</li><li>数据传输： 客户端和服务器可以通过连接发送和接收数据。</li><li>关闭连接： 客户端或服务器可以主动关闭连接。</li></ol><h4 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h4><p>WebSocket 是一种强大的实时通信协议，它为 Web 应用带来了更多的可能性。通过 WebSocket，我们可以构建出更加丰富、交互性更强的应用。</p>',11)]))}const _=e(l,[["render",r]]);export{n as __pageData,_ as default};
