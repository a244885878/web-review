import{_ as o,c as l,o as c,ae as d}from"./chunks/framework.Cthp9TdA.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"04_vue/vue模板渲染的基本流程.md","filePath":"04_vue/vue模板渲染的基本流程.md"}'),i={name:"04_vue/vue模板渲染的基本流程.md"};function a(t,e,u,r,n,_){return c(),l("div",null,e[0]||(e[0]=[d('<blockquote><p>Vue.js 将模板（template）编译成渲染函数（render function），然后执行渲染函数创建虚拟 DOM（Virtual DOM），再将虚拟 DOM 与真实的 DOM 进行对比，最后将差异更新到真实的 DOM 上，从而实现视图的更新。</p></blockquote><h4 id="整个过程可以分为以下几个步骤" tabindex="-1">整个过程可以分为以下几个步骤： <a class="header-anchor" href="#整个过程可以分为以下几个步骤" aria-label="Permalink to &quot;整个过程可以分为以下几个步骤：&quot;">​</a></h4><ol><li>模板解析： <ul><li>Vue 会将 <code>template</code> 标签中的内容解析成一个抽象语法树（AST）。<code>AST</code> 是一种树状的数据结构，用来表示代码的语法结构。</li><li>每个节点在 <code>AST</code> 中都有一个对应的类型，比如元素节点、文本节点、指令节点等。</li></ul></li><li>生成渲染函数： <ul><li>遍历 <code>AST</code>，生成一个 <code>render</code> 函数。</li><li><code>render</code> 函数是一个 JavaScript 函数，它接收一个 <code>createElement</code> 函数作为参数，通过调用 <code>createElement</code> 函数来创建虚拟 DOM。</li><li>虚拟 <code>DOM</code> 本质上是一个 <code>JavaScript</code> 对象，它描述了页面中每个元素的结构、属性和子节点。</li></ul></li><li>执行渲染函数： <ul><li>当数据发生变化时，Vue 会重新执行 <code>render</code> 函数，生成新的虚拟 <code>DOM</code>。</li><li>然后 <code>Vue</code> 会比较新旧两个虚拟 <code>DOM</code>，找出其中的差异。</li></ul></li><li>对比虚拟 DOM： <ul><li>Vue 使用了一种高效的 <code>Diff</code> 算法来比较新旧虚拟 <code>DOM</code>。</li><li><code>Diff</code> 算法会找出哪些节点被添加、删除、修改了，以及节点的顺序是否发生了变化。</li></ul></li><li>更新真实 DOM： <ul><li>根据 <code>Diff</code> 算法的结果，Vue 会对真实的 <code>DOM</code> 进行最小化的更新，以达到与新的虚拟 <code>DOM</code> 保持一致的目的。</li><li>这样就实现了数据的双向绑定，当数据发生变化时，视图会自动更新。</li></ul></li></ol><h4 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h4><p>Vue 模板渲染的核心思想是：</p><ul><li>虚拟 DOM： 通过虚拟 <code>DOM</code> 来描述页面结构，避免直接操作 <code>DOM</code>，提高性能。</li><li>Diff 算法： 采用高效的 <code>Diff</code> 算法来比较新旧虚拟 <code>DOM</code>，找出差异。</li><li>最小化更新： 只更新发生变化的部分，减少 <code>DOM</code> 操作，提高性能。</li></ul><h4 id="vue-模板渲染的优点" tabindex="-1">Vue 模板渲染的优点： <a class="header-anchor" href="#vue-模板渲染的优点" aria-label="Permalink to &quot;Vue 模板渲染的优点：&quot;">​</a></h4><ul><li>性能优异： 虚拟 <code>DOM</code> 和 <code>Diff</code> 算法使得 <code>Vue</code> 的性能非常高。</li><li>开发体验好： 模板语法简洁直观，易于学习和使用。</li><li>响应式系统： 数据驱动视图，使得开发更加高效。</li></ul>',8)]))}const s=o(i,[["render",a]]);export{f as __pageData,s as default};
