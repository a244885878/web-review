import{_ as i,c as a,o as l,ae as n}from"./chunks/framework.Cthp9TdA.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"02_css/css选择器有哪些？优先级？哪些属性可以继承？.md","filePath":"02_css/css选择器有哪些？优先级？哪些属性可以继承？.md"}'),t={name:"02_css/css选择器有哪些？优先级？哪些属性可以继承？.md"};function h(p,s,k,e,E,d){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="css-选择器有哪些-优先级-哪些属性可以继承" tabindex="-1">css 选择器有哪些？优先级？哪些属性可以继承？ <a class="header-anchor" href="#css-选择器有哪些-优先级-哪些属性可以继承" aria-label="Permalink to &quot;css 选择器有哪些？优先级？哪些属性可以继承？&quot;">​</a></h2><p><img src="https://static.vue-js.com/f7dcd330-8fe1-11eb-85f6-6fac77c0c9b3.png" alt=""></p><h3 id="一、选择器" tabindex="-1">一、选择器 <a class="header-anchor" href="#一、选择器" aria-label="Permalink to &quot;一、选择器&quot;">​</a></h3><p>CSS 选择器是 CSS 规则的第一部分</p><p>它是元素和其他部分组合起来告诉浏览器哪个 HTML 元素应当是被选为应用规则中的 CSS 属性值的方式</p><p>选择器所选择的元素，叫做“选择器的对象”</p><p>我们从一个 Html 结构开始</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;one&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;one_1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;one_1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;two&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>关于 css 属性选择器常用的有：</p><ul><li>id 选择器（#box），选择 id 为 box 的元素</li><li>类选择器（.one），选择类名为 one 的所有元素</li><li>标签选择器（div），选择标签为 div 的所有元素</li><li>后代选择器（#box div），选择 id 为 box 元素内部所有的 div 元素</li><li>子选择器（.one&gt;one_1），选择父元素为.one 的所有.one_1 的元素</li><li>相邻同胞选择器（.one+.two），选择紧接在.one 之后的所有.two 元素</li><li>群组选择器（div,p），选择 div、p 的所有元素</li></ul><p>还有一些使用频率相对没那么多的选择器：</p><ul><li>伪类选择器</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ：选择未被访问的链接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:visited</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：选取已被访问的链接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:active</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：选择活动链接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:hover</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ：鼠标指针浮动在上面的元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:focus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ：选择具有焦点的</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:first-child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：父元素的首个子元素</span></span></code></pre></div><ul><li>伪元素选择器</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::first-letter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ：用于选取指定选择器的首字母</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::first-line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ：选取指定选择器的首行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : 选择器在被选元素的内容前面插入内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : 选择器在被选元素的内容后面插入内容</span></span></code></pre></div><ul><li>属性选择器</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] 选择带有attribute属性的元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] 选择所有使用attribute=value的元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] 选择attribute属性包含value的元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]：选择attribute属性以value开头的元素</span></span></code></pre></div><p>在 CSS3 中新增的选择器有如下：</p><ul><li>层次选择器（p~ul），选择前面有 p 元素的每个 ul 元素</li><li>伪类选择器</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:first-of-type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表示一组同级元素中其类型的第一个元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:last-of-type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表示一组同级元素中其类型的最后一个元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:only-of-type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表示没有同类型兄弟元素的元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:only-child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表示没有任何兄弟的元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:nth-child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) 根据元素在一组同级中的位置匹配元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:nth-last-of-type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">n</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) 匹配给定类型的元素，基于它们在一组兄弟元素中的位置，从末尾开始计数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:last-child</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表示一组兄弟元素中的最后一个元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 设置HTML文档</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 指定空的元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 选择可用元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 选择被禁用元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:checked</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 选择选中的元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(selector) 选择与 &lt;selector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 不匹配的所有元素</span></span></code></pre></div><ul><li>属性选择器</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]：选择attribute属性值包含value的所有元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]：选择attribute属性开头为value的所有元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">$=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]：选择attribute属性结尾为value的所有元素</span></span></code></pre></div><h3 id="二、优先级" tabindex="-1">二、优先级 <a class="header-anchor" href="#二、优先级" aria-label="Permalink to &quot;二、优先级&quot;">​</a></h3><p>相信大家对 CSS 选择器的优先级都不陌生：</p><blockquote><p>内联 &gt; ID 选择器 &gt; 类选择器 &gt; 标签选择器</p></blockquote><p>到具体的计算层⾯，优先级是由 A 、B、C、D 的值来决定的，其中它们的值计算规则如下：</p><ul><li>如果存在内联样式，那么 A = 1, 否则 A = 0</li><li>B 的值等于 ID 选择器出现的次数</li><li>C 的值等于 类选择器 和 属性选择器 和 伪类 出现的总次数</li><li>D 的值等于 标签选择器 和 伪元素 出现的总次数</li></ul><p>这里举个例子：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">#nav-global</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> ul</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> li</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nav-link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>套用上面的算法，依次求出 A B C D 的值：</p><ul><li>因为没有内联样式 ，所以 A = 0</li><li>ID 选择器总共出现了 1 次， B = 1</li><li>类选择器出现了 1 次， 属性选择器出现了 0 次，伪类选择器出现 0 次，所以 C = (1 + 0 + 0) = 1</li><li>标签选择器出现了 3 次， 伪元素出现了 0 次，所以 D = (3 + 0) = 3 上面算出的 A 、 B、C、D 可以简记作：(0, 1, 1, 3) 知道了优先级是如何计算之后，就来看看比较规则：</li><li>从左往右依次进行比较 ，较大者优先级更高</li><li>如果相等，则继续往右移动一位进行比较</li><li>如果 4 位全部相等，则后面的会覆盖前面的</li></ul><p>经过上面的优先级计算规则，我们知道内联样式的优先级最高，如果外部样式需要覆盖内联样式，就需要使用!important</p><h3 id="三、继承属性" tabindex="-1">三、继承属性 <a class="header-anchor" href="#三、继承属性" aria-label="Permalink to &quot;三、继承属性&quot;">​</a></h3><p>在 css 中，继承是指的是给父元素设置一些属性，后代元素会自动拥有这些属性</p><p>关于继承属性，可以分成：</p><ul><li>字体系列属性</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">font</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:组合字体</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">font-family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:规定元素的字体系列</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">font-weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:设置字体的粗细</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">font-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:设置字体的尺寸</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">font-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:定义字体的风格</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">font-variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:偏大或偏小的字体</span></span></code></pre></div><ul><li>文本系列属性</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-indent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：文本缩进</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：文本水平对刘</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">line-height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：行高</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">word-spacing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：增加或减少单词间的空白</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">letter-spacing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：增加或减少字符间的空白</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">text-transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：控制文本大小写</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">direction：规定文本的书写方向</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">color：文本颜色</span></span></code></pre></div><ul><li>元素可见性</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">visibility</span></span></code></pre></div><ul><li>表格布局属性</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">caption-side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：定位表格标题位置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-collapse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：合并表格边框</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">border-spacing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：设置相邻单元格的边框间的距离</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">empty-cells</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：单元格的边框的出现与消失</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">table-layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：表格的宽度由什么决定</span></span></code></pre></div><ul><li>列表属性</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list-style-type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：文字前面的小点点样式</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list-style-position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：小点点位置</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">list-style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：以上的属性可通过这属性集合</span></span></code></pre></div><ul><li>引用</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">quotes：设置嵌套引用的引号类型</span></span></code></pre></div><ul><li>光标属性</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cursor：箭头可以变成需要的形状</span></span></code></pre></div><p>继承中比较特殊的几点：</p><ul><li>a 标签的字体颜色不能被继承</li><li>h1-h6 标签字体的大下也是不能被继承的</li></ul><h4 id="无继承的属性" tabindex="-1">无继承的属性 <a class="header-anchor" href="#无继承的属性" aria-label="Permalink to &quot;无继承的属性&quot;">​</a></h4><ul><li>display</li><li>文本属性：vertical-align、text-decoration</li><li>盒子模型的属性：宽度、高度、内外边距、边框等</li><li>背景属性：背景图片、颜色、位置等</li><li>定位属性：浮动、清除浮动、定位 position 等</li><li>生成内容属性：content、counter-reset、counter-increment</li><li>轮廓样式属性：outline-style、outline-width、outline-color、outline</li><li>页面样式属性：size、page-break-before、page-break-after</li></ul>`,53)]))}const c=i(t,[["render",h]]);export{g as __pageData,c as default};
