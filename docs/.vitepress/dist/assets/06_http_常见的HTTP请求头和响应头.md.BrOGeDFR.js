import{_ as o,c as l,o as i,ae as c}from"./chunks/framework.Cthp9TdA.js";const s=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"06_http/常见的HTTP请求头和响应头.md","filePath":"06_http/常见的HTTP请求头和响应头.md"}'),d={name:"06_http/常见的HTTP请求头和响应头.md"};function t(n,e,a,u,T,r){return i(),l("div",null,e[0]||(e[0]=[c('<blockquote><p>HTTP 头部字段是在 HTTP 请求和响应消息中传递的名称/值对。它们允许客户端和服务器传递有关请求或响应的附加信息。</p></blockquote><h4 id="http-请求头" tabindex="-1">HTTP 请求头 <a class="header-anchor" href="#http-请求头" aria-label="Permalink to &quot;HTTP 请求头&quot;">​</a></h4><p>HTTP 请求头用于向服务器提供有关客户端、请求的附加信息。以下是一些常见的 HTTP 请求头：</p><ul><li><code>Accept</code>：客户端能够处理的 MIME 类型列表。 <ul><li>示例：<code>Accept: text/html, application/json</code></li></ul></li><li><code>Accept-Encoding</code>：客户端能够处理的编码类型列表。 <ul><li>示例：<code>Accept-Encoding: gzip, deflate</code></li></ul></li><li><code>Authorization</code>：包含客户端的身份验证凭据。 <ul><li>示例：<code>Authorization: Bearer &lt;token&gt;</code></li></ul></li><li><code>Cache-Control</code>：指定缓存指令。 <ul><li>示例：<code>Cache-Control: no-cache</code></li></ul></li><li><code>Connection</code>：指定连接选项，例如是否保持连接。 <ul><li>示例：<code>Connection: keep-alive</code></li></ul></li><li><code>Content-Length</code>：请求主体的长度（以字节为单位）。 <ul><li>示例：<code>Content-Length: 1024</code></li></ul></li><li><code>Content-Type</code>：请求主体的 <code>MIME</code> 类型。 <ul><li>示例：<code>Content-Type: application/json</code></li></ul></li><li><code>Cookie</code>：包含存储在客户端的 <code>HTTP Cookie</code>。 <ul><li>示例：<code>Cookie: name=value</code></li></ul></li><li><code>Host</code>：服务器的主机名和端口号。 <ul><li>示例：<code>Host: example.com</code></li></ul></li><li><code>User-Agent</code>：客户端的标识字符串。 <ul><li>示例：<code>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36</code></li></ul></li></ul><h4 id="http-响应头" tabindex="-1">HTTP 响应头 <a class="header-anchor" href="#http-响应头" aria-label="Permalink to &quot;HTTP 响应头&quot;">​</a></h4><p>HTTP 响应头用于向客户端提供有关响应的附加信息。以下是一些常见的 HTTP 响应头：</p><ul><li><code>Access-Control-Allow-Origin</code>：指定允许访问资源的来源。 <ul><li>示例：<code>Access-Control-Allow-Origin: \\*</code></li></ul></li><li><code>Cache-Control</code>：指定缓存指令。 <ul><li>示例：<code>Cache-Control: public, max-age=3600</code></li></ul></li><li><code>Connection</code>：指定连接选项，例如是否保持连接。 <ul><li>示例：<code>Connection: close</code></li></ul></li><li><code>Content-Encoding</code>：响应主体的编码类型。 <ul><li>示例：<code>Content-Encoding: gzip</code></li></ul></li><li><code>Content-Length</code>：响应主体的长度（以字节为单位）。 <ul><li>示例：<code>Content-Length: 1024</code></li></ul></li><li><code>Content-Type</code>：响应主体的 MIME 类型。 <ul><li>示例：<code>Content-Type: application/json</code></li></ul></li><li><code>Date</code>：响应的日期和时间。 <ul><li>示例：<code>Date: Tue, 15 Nov 2022 12:34:56 GMT</code></li></ul></li><li><code>ETag</code>：资源的实体标签。 <ul><li>示例：<code>ETag: &quot;1234567890&quot;</code></li></ul></li><li><code>Expires</code>：资源过期的日期和时间。 <ul><li>示例：<code>Expires: Thu, 01 Dec 2022 00:00:00 GMT</code></li></ul></li><li><code>Last-Modified</code>：资源上次修改的日期和时间。 <ul><li>示例：<code>Last-Modified: Mon, 14 Nov 2022 12:34:56 GMT</code></li></ul></li><li><code>Location</code>：重定向 URI。 <ul><li>示例：<code>Location: /new-page</code></li></ul></li><li><code>Set-Cookie</code>：设置存储在客户端的 HTTP Cookie。 <ul><li>示例：<code>Set-Cookie: name=value; expires=Thu, 01 Dec 2022 00:00:00 GMT; path=/</code></li></ul></li><li><code>Status</code>：包含响应的 HTTP 状态代码和原因短语。 <ul><li>示例：<code>HTTP/1.1 200 OK</code></li></ul></li><li><code>Transfer-Encoding</code>：指定用于传输主体的编码类型。 <ul><li>示例：<code>Transfer-Encoding: chunked</code></li></ul></li><li><code>Vary</code>：指定用于选择适当的缓存响应的请求头。 <ul><li>示例：<code>Vary: Accept-Encoding</code></li></ul></li><li><code>WWW-Authenticate</code>：指定客户端进行身份验证所需的身份验证方案。 <ul><li>示例：<code>WWW-Authenticate: Basic realm=&quot;example.com&quot;</code></li></ul></li></ul>',7)]))}const h=o(d,[["render",t]]);export{s as __pageData,h as default};
